//
//  WWDailyPrefixHeader.pch
//  WWDaily
//
//  Created by wangyongwang on 2018/7/31.
//  Copyright © 2018年 WYW. All rights reserved.
//

#ifndef WWDailyPrefixHeader_pch
#define WWDailyPrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#ifdef __OBJC__

//判断是否为iPhone
#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)

//判断是否为iPad
#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)

//判断是否为ipod
#define IS_IPOD ([[[UIDevice currentDevice] model] isEqualToString:@"iPod touch"])

#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height
#define SCREEN_SCALE [UIScrren mainScreen].scale


#define WIDTH(NUM) SCREEN_WIDTH * NUM
#define HEIGHT(NUM) SCREEN_HEIGHT * NUM

//#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 80000 // 当前Xcode支持iOS8及以上
//
//#define SCREEN_WIDTH ([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)]?[UIScreen mainScreen].nativeBounds.size.width/[UIScreen mainScreen].nativeScale:[UIScreen mainScreen].bounds.size.width)
//#define SCREENH_HEIGHT ([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)]?[UIScreen mainScreen].nativeBounds.size.height/[UIScreen mainScreen].nativeScale:[UIScreen mainScreen].bounds.size.height)
//#define SCREEN_SIZE ([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)]?CGSizeMake([UIScreen mainScreen].nativeBounds.size.width/[UIScreen mainScreen].nativeScale,[UIScreen mainScreen].nativeBounds.size.height/[UIScreen mainScreen].nativeScale):[UIScreen mainScreen].bounds.size)
//#else
//#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
//#define SCREENH_HEIGHT [UIScreen mainScreen].bounds.size.height
//#define SCREEN_SIZE [UIScreen mainScreen].bounds.size
//#endif

// 判断是否为 iPhone 5SE
#define iPhone5SE  SCREEN_WIDTH == 320.0f && SCREEN_HEIGHT == 568.0f

// 判断是否为iPhone 6/6s/7
#define iPhone6_6s_7 SCREEN_WIDTH == 375.0f && SCREEN_HEIGHT == 667.0f

// 判断是否为iPhone 6Plus/6sPlus/7plus
#define iPhone6Plus_6sPlus_7plus SCREEN_WIDTH == 414.0f && SCREEN_HEIGHT == 736.0f
//判断是否为iPhoneX
#define isIPhoneX  SCREEN_WIDTH == 375.0 && SCREEN_HEIGHT == 812.0

// 判断是否为 ipad Pro 9.7inch 或者是 iPad Air 或者是 iPad Air2
#define iPadPro97_Air_Air2 SCREEN_WIDTH == 1024.0 && SCREEN_HEIGHT == 768.0
// 判断是否为 ipad Pro 10.5inch
#define iPadPro105 SCREEN_WIDTH == 1112.0 && SCREEN_HEIGHT == 834.0
// 判断是否为 ipad Pro 12.9inch
#define iPadPro129 SCREEN_WIDTH == 1366.0 && SCREEN_HEIGHT == 1024.0

#define WWStatusBarHeight (isIPhoneX ? 44.0 : 20.0)
#define WWNavigationBarHeight 44.0
#define WWStatusBarNavigationBarHeight (WWStatusBarHeight + WWNavigationBarHeight)

//获取系统版本
//这个方法不是特别靠谱
#define IOS_SYSTEM_VERSION [[[UIDevice currentDevice] systemVersion] floatValue]
//建议使用这个方法
#define IOS_SYSTEM_STRING [[UIDevice currentDevice] systemVersion]
//判断 iOS 8 或更高的系统版本
#define IOS_VERSION_8_OR_LATER (([[[UIDevice currentDevice] systemVersion] floatValue] >=8.0)? (YES):(NO))


#define WWRandomColor [UIColor colorWithRed:arc4random_uniform(256)/255.0 green:arc4random_uniform(256)/255.0 blue:arc4random_uniform(256)/255.0 alpha:1.0]

#define WWRGBAColor(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]
#define WWRGBColor(r, g, b) WWRGBAColor(r, g, b, 1.0)

// rgb颜色转换（16进制->10进制）
#define WW0xRGB(xrgbValue) [UIColor colorWithRed:((float)((xrgbValue & 0xFF0000) >> 16))/255.0 green:((float)((xrgbValue & 0xFF00) >> 8))/255.0 blue:((float)(xrgbValue & 0xFF))/255.0 alpha:1.0]

//获取temp
#define WWTempPath NSTemporaryDirectory()

//获取沙盒 Document
#define WWDocumentPath [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]

//获取沙盒 Cache
#define WWCachePath [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]

//获取图片资源
#define WWGetImage(imageName) [UIImage imageNamed:[NSString stringWithFormat:@"%@",imageName]]

//获取当前语言
#define WWCurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

#pragma mark - ThirdLib ------------------------




// 加载
#define WWNetworkShowActivityIndicator() [UIApplication sharedApplication].networkActivityIndicatorVisible = YES
// 收起加载
#define WWNetworkHideActivityIndicator()      [UIApplication sharedApplication].networkActivityIndicatorVisible = NO
// 设置加载
#define WWNetworkActivityIndicatorVisible(x)  [UIApplication sharedApplication].networkActivityIndicatorVisible = x

#define WWKeyWindow [UIApplication sharedApplication].keyWindow



#define WWWeakSelf(type)  __weak typeof(type) weak##type = type;
#define WWStrongSelf(type)  __strong typeof(type) type = weak##type;
//设置不常用视图时用
#define WWViewBorderRadiusWidthColor(View, Radius, Width, Color)\
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES];\
[View.layer setBorderWidth:(Width)];\
[View.layer setBorderColor:[Color CGColor]]

    #ifdef DEBUG
        #define WWLog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
    #else
        #define WWLog(...)
    #endif
#endif

//https://www.jianshu.com/p/3d6c4416db5e

#ifndef weakify
    #if __has_feature(objc_arc)

    #define weakify( x ) \\
        _Pragma("clang diagnostic push") \\
        _Pragma("clang diagnostic ignored \\"-Wshadow\\"") \\
        autoreleasepool{} __weak __typeof__(x) __weak_##x##__ = x; \\
        _Pragma("clang diagnostic pop")

    #else

    #define weakify( x ) \\
        _Pragma("clang diagnostic push") \\
        _Pragma("clang diagnostic ignored \\"-Wshadow\\"") \\
        autoreleasepool{} __block __typeof__(x) __block_##x##__ = x; \\
        _Pragma("clang diagnostic pop")

    #endif
#endif

#ifndef strongify
    #if __has_feature(objc_arc)

        #define strongify( x ) \\
            _Pragma("clang diagnostic push") \\
            _Pragma("clang diagnostic ignored \\"-Wshadow\\"") \\
            try{} @finally{} __typeof__(x) x = __weak_##x##__; \\
            _Pragma("clang diagnostic pop")

    #else

        #define strongify( x ) \\
        _Pragma("clang diagnostic push") \\
        _Pragma("clang diagnostic ignored \\"-Wshadow\\"") \\
        try{} @finally{} __typeof__(x) x = __block_##x##__; \\
        _Pragma("clang diagnostic pop")

    #endif
#endif




#endif /* WWDailyPrefixHeader_pch */
